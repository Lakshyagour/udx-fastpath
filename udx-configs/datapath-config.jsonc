{
    /* 
   * Datapath information definations
   * MODEL --  master-worker (mw) | run-to-completion (rtc)
   * API   -- DPDK, CNDP
   */
    "API": "cndp",
    "MODEL": "run-to-completion",
    /* Log Level Of Application one of the following DEBUG, INFO, WARN, ERROR */
    "LOG_LEVEL": "VERBOSE",
    "workers-configuration": {
        "worker-cores": [
            "1-2"
        ],
        /* A Lockless FIFO ring is used to transfer ownership of packet pointer from RX-TX cores to Worker Cores. Must be in Power of 2. */
        "worker-ring-size": 65536
    },
    "fastpath-port-configuration": {
        /* If you want Application datapath to only receive packet with dataplane-port then enable it*/
        "fastpath-filtering": true,
        /* The packets with matching ports will be sent to the fast-path all other packet are sent to kernel using TUN device irrespective of packet I/O Choosen */
        "fasthpath-ports": [
            2506,
            "10000-10100"
        ]
    },
    "create-tap-device": true, /* Should be disabled when deploying in cloud as device plugin will handle the creation*/
    "tap-device-num-queues": 1, /* This define number of queues the TUN device, should be greater than equal to 1*/
    "dpdk-datapath-params": {
        /*EAL parameters -- https://doc.dpdk.org/guides/linux_gsg/linux_eal_parameters.html*/
        "main-lcore": "0",
        // "lcore-related-options": "-c <coremask> | -l <corelist> | --lcores <core map> | --main-lcore <core ID> |-s <service core mask>",
        // "memory-related-options": "-n <number of channels> | -r <number of ranks> | -m <megabytes> | --in-memory | --iova-mode <pa|va> | --huge-worker-stack[=size]",
        // "device-related-options": "-b, --block <[domain:]bus:devid.func> | -a, --allow <[domain:]bus:devid.func> | --vdev <device arguments> | --no-pci",
        // "multiprocessing-related-options": "--proc-type <primary|secondary|auto> | --base-virtaddr <address>",
        // "debugging-options": "--no-shconf | --no-huge | --log-level <type:val> | --trace=<regex-match> | --trace-dir=<directory path> | --trace-bufsz=<val> | --trace-mode=<o[verwrite] | d[iscard] >",
        "queues-and-mbuf-options": {
            "mp-alloc": "native",
            "total-num-mbufs": 8192,
            "burst": 32,
            "num-rx-tx-descriptor": 512,
            "mbcache": 16,
            "regions": []
        },
        /* A logical port is defined by pci_addr there need be total of nb_ports*min(rxq,txq) logical ports */
        "lports": {
            "0000:04:02.0": {
                "rx-tx-queues-info": {
                    "queue:0": {
                        "core-id": 0,
                        "region-index": 0
                    },
                    "queue:1": {
                        "core-id": 1,
                        "region-index": 0
                    }
                },
                "lport-related-info": "TRIAL"
            }
        }
    },
    "cndp-datapath-params": {
        /* This should not be used in cloud as CNI will setup the device plugin will setup the ethtool filters*/
        "rss-configuration": {
            "ens261f1": {
                "num-dev-queues-combined": 2,
                /* rss-redirectioins This is to setup RSS on device as AF_XDP socket are bound to queue, RSS is needed in order to get data to socket [required]*/
                "rss-start": 0,
                "rss-equal": 2
            }
        },
        "main-lcore": 0,
        "burst": 32,
        "idle_timeout": 0,
        "intr_timeout": 0,
        "umems": {
            "umem0": {
                "bufcnt": 128,
                "bufsz": 2,
                "mtype": "2MB",
                "regions": [
                    64,
                    64
                ],
                "rxdesc": 2,
                "txdesc": 2
            }
        },
        /*[required]*/
        "lports": {
            /*the defines a logical port which is equal to dev_name,queueid*/
            "ens261f1": {
                "pmd": "net_afxdp",
                "umem": "umem0",
                "rx-tx-queues-info": {
                    "queue:0": {
                        "queue-id": 0, // Device queue 
                        "core-id": 0,
                        "region-index": 0
                    },
                    "queue:1": {
                        "queue-id": 1, // Device queue 
                        "core-id": 1,
                        "region-index": 1
                    }
                },
                "busy_poll": true,
                "busy_budget": 0
            }
        }
    }
}